use mdb;
CREATE DATABASE MDB;
show databases;
SHOW TABLES;
DROP TABLE MYPRODUCT;
DROP DATABASE MDB; 
CREATE TABLE Product(
ID INT PRIMARY KEY AUTO_INCREMENT,
Name VARCHAR(255) NOT NULL
);
SELECT * FROM PRODUCT;
INSERT INTO PRODUCT(NAME) VALUES('AMERICAN');
INSERT INTO PRODUCT(NAME) VALUES('LATTEE');
INSERT INTO PRODUCT(NAME) VALUES('RED TEA');
INSERT INTO PRODUCT(NAME) VALUES('BLACK TEA');
DROP TABLE PRODUCT;
CREATE TABLE VARIANT (
id INT PRIMARY KEY AUTO_INCREMENT,
PRODUCT_ID INT,
VOLUME VARCHAR(255) NOT NULL,
PRICE int NOT NULL
);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(1, 'median', 40);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(1, 'LARGE', 50);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(2, 'median', 70);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(2, 'LARGE', 80);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(3, 'median', 90);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(3, 'LARGE', 100);
INSERT INTO VARIANT(PRODUCT_ID, VOLUME, PRICE) VALUES(5, 'MEDIAN', 200);
select * from variant;
drop table variant;
SELECT * FROM PRODUCT INNER JOIN VARIANT ON PRODUCT.ID= VARIANT.PRODUCT_ID;  #SELECT * FROM 是全選
SELECT PRODUCT.NAME, VARIANT.VOLUME, VARIANT.PRICE FROM PRODUCT INNER JOIN VARIANT ON PRODUCT.ID= VARIANT.PRODUCT_ID;
SELECT * FROM PRODUCT LEFT JOIN VARIANT ON PRODUCT.ID= VARIANT.PRODUCT_ID;
SELECT * FROM PRODUCT RIGHT JOIN VARIANT ON PRODUCT.ID= VARIANT.PRODUCT_ID;
SELECT sum(PRICE) FROM VARIANT;
SELECT AVG(PRICE) FROM VARIANT;
SELECT COUNT(NAME) FROM PRODUCT; 
CREATE TABLE ORDERQ (
ORDER_ID INT PRIMARY KEY AUTO_INCREMENT,
ORDERDATE VARCHAR(255) NOT NULL,
PRODUCTNAME VARCHAR(255) NOT NULL,
QUANTITY INT NOT NULL,
AMOUNT INT NOT NULL,
USERID VARCHAR(255)
);
SELECT * FROM ORDERQ;
INSERT INTO ORDERQ(ORDER_ID, ORDERDATE, PRODUCTNAME, QUANTITY, AMOUNT, USERID) VALUES(1, '2023-10-15', 'SHOES', 2, 4, 1);
INSERT INTO ORDERQ(ORDER_ID, ORDERDATE, PRODUCTNAME, QUANTITY, AMOUNT, USERID) VALUES(2, '2023-10-15', 'SUITS', 500, 6000, 2);
INSERT INTO ORDERQ(ORDER_ID, ORDERDATE, PRODUCTNAME, QUANTITY, AMOUNT, USERID) VALUES(3, '2023-10-16', 'BOOKS', 200, 6464, 3);
INSERT INTO ORDERQ(ORDER_ID, ORDERDATE, PRODUCTNAME, QUANTITY, AMOUNT, USERID) VALUES(4, '2023-10-17', 'MEALS', 123, 477, 4);
DROP TABLE ORDERQ;
SELECT ORDERDATE, SUM(AMOUNT) FROM ORDERQ GROUP BY ORDERDATE;
SELECT PRODUCTNAME, MAX(QUANTITY) FROM ORDERQ GROUP BY PRODUCTNAME;
SELECT AVG(AMOUNT) FROM ORDERQ;
ALTER TABLE VARIANT ADD foreign key(PRODUCT_ID) REFERENCES PRODUCT(ID); 
DELETE FROM VARIANT WHERE PRODUCT_ID=3;
delete FROM PRODUCT where ID=3;
INSERT INTO PRODUCT(ID, NAME) VALUES(3, 'RED TEA');
SELECT * FROM PRODUCT;
SELECT * FROM VARIANT;
ALTER TABLE VARIANT ADD foreign key(PRODUCT_ID) references PRODUCT(ID);
DELETE FROM PRODUCT WHERE ID=1;
alter TABLE ORDERQ ADD INDEX INDEX_PRODUCT(PRODUCTNAME);
SELECT * FROM ORDERQ WHERE PRODUCTNAME='BOOKS';
EXPLAIN SELECT * FROM ORDERQ WHERE PRODUCTNAME='BOOKS';
SELECT * FROM VARIANT;
SELECT PRODUCT_ID, STD(PRICE) FROM VARIANT GROUP BY PRODUCT_ID;
SELECT PRODUCT_ID, avg(PRICE) FROM VARIANT GROUP BY PRODUCT_ID;
SELECT STD(PRICE), MAX(PRICE), AVG(PRICE), SUM(PRICE) FROM VARIANT;
SELECT VOLUME, AVG(PRICE) FROM VARIANT GROUP BY VOLUME; 
SELECT * FROM VARIANT INNER JOIN PRODUCT ON VARIANT.PRODUCT_ID=PRODUCT.ID;
SELECT PRODUCT_ID, NAME, AVG(VARIANT.PRICE) FROM VARIANT INNER JOIN PRODUCT ON VARIANT.PRODUCT_ID=PRODUCT.ID GROUP BY PRODUCT_ID;




SHOW databases;
CREATE DATABASE mdb;
DROP DATABASE MDB;
USE mysql;
use mdb;
show tables;
create table product (
	id INT PRIMARY KEY auto_increment,
    name VARCHAR(255) NOT NULL,
    price INT not null default 30
    );
   select* from product;
   insert into product (id, name, price) value (1, 'lattee', 30);
   insert into product (id, name, price) value (2, 'americano', 30);
   insert into product (name, price) value ('milk tea', 30);
    insert into product (name, price) value ('GREEN tea', 40);
    insert into product (name) value ('RED tea');
    drop table product;
 SELECT name, price FROM PRODUCT WHERE NAME='RED TEA';
 SELECT * FROM PRODUCT WHERE PRICE!=40 AND NAME='LATTEE';
 SELECT * FROM PRODUCT WHERE PRICE!=40 OR NAME='LATTEE';
 
 
 
 
 Set sql_safe_updates=0; 
 UPDATE product SET PRICE=50 WHERE NAME='RED TEA';
 update product set price=90 where name='lattee';
 select * from product;
 update product set price=20, name='british tea' where name='milk tea';
 update product set price=45 where price<=40;
 delete from product where name='lattee';
 SELECT NAME FROM CUSTOMER WHERE REFEREE_ID!="2" OR REFEREE_ID IS NULL;
 
 select tweet_id from tweets where length(content) >15;
# LENGTH(COLUMN_NAME)   
 

 select s.student_id, s.student_name, sub.subject_name, COUNT(e.subject_name) as attended_exams from Students s cross join Subjects sub left join Examinations e on s.student_id=e.student_id and sub.subject_name=e.subject_name group by s.student_id,s.student_name,sub.subject_name order by s.student_id, sub.subject_name

select name, bonus from Employee left join Bonus on employee.empID=bonus.empID WHERE Bonus < 1000 or Bonus is null;
